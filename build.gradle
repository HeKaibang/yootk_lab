buildscript {
    repositories {
        // 使用腾讯源
        maven { url 'https://mirrors.cloud.tencent.com/nexus/repository/maven-public' }
        maven { url 'https://repo.spring.io/libs-milestone' }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:3.4.3'
    }
}

plugins {
    id 'java'
}

group project_group
version project_version

def env = System.getProperty("env") ?: 'dev'

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    sourceCompatibility = project_jdk
    targetCompatibility = project_jdk
    repositories {
        mavenLocal()
        // 使用腾讯源
        maven {
            allowInsecureProtocol = true
            url 'https://mirrors.cloud.tencent.com/nexus/repository/maven-public'
        }
        maven { url 'https://repo.spring.io/libs-milestone' }
        mavenCentral()
    }
    dependencies {}
    sourceSets {
        main {
            java { srcDirs = ['src/main/java'] }
            resources { srcDirs = ['src/main/resources', "src/main/profiles/$env"] }
        }
        test {
            java { srcDirs = ['src/test/java'] }
            resources { srcDirs = ['src/test/resources'] }
        }
    }
    test {
        useJUnitPlatform()
    }

    task sourceJar(type: Jar, dependsOn: classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocTask(type: Javadoc) {
        options.encoding = 'UTF-8'
        source = sourceSets.main.allJava
    }

    task javadocJar(type: Jar, dependsOn: javadocTask) {
        archiveClassifier = 'javadoc'
        from javadocTask.destinationDir
    }

    tasks.withType(Javadoc) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    artifacts {
        archives sourceJar
        archives javadocJar
    }

    gradle.taskGraph.whenReady {
        tasks.each { task ->
            if (task.name.contains('test')) {
                task.enabled = true
            }
        }
    }
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
}


project(":common") { // 定义公共程序类
    dependencies {}
}

project(":lab_message") { // 定义公共程序类
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'  // 依赖导入
        implementation project(':common')  // 引入其他子模块
    }
}